// –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ script.js
let isModule = false;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–∫—Ä–∏–ø—Ç –º–æ–¥—É–ª–µ–º
try {
  // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å import –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è
  if (typeof import.meta !== 'undefined') {
    isModule = true;
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫ –º–æ–¥—É–ª—å');
  }
} catch (e) {
  console.log('‚ÑπÔ∏è –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª');
}

// –ï—Å–ª–∏ —ç—Ç–æ –º–æ–¥—É–ª—å - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Supabase
if (isModule) {
  import('./lib/supabase.js')
    .then(({ supabase }) => {
      console.log('‚úÖ Supabase –∑–∞–≥—Ä—É–∂–µ–Ω');
      setupRealtimeSync(supabase);
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Supabase:', error);
    });
}

// –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// –¢–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä supabase –≤ —Ñ—É–Ω–∫—Ü–∏–∏:

function setupRealtimeSync(supabase) {
  if (!supabase) {
    console.log('Supabase –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
    return;
  }
  
  supabase
    .channel('students-changes')
    .on('postgres_changes', 
      { 
        event: '*', 
        schema: 'public', 
        table: 'students' 
      }, 
      (payload) => {
        console.log('üîÑ –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞');
        loadFromServer().then(success => {
          if (success) {
            if (window.updateStudentsTable) updateStudentsTable();
            if (window.updateGroupsStats) updateGroupsStats();
            if (window.updateReportFilters) updateReportFilters();
          }
        });
      }
    )
    .subscribe();
}

// –û—Å—Ç–∞–ª—å–Ω–æ–π –≤–∞—à –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
import { supabase } from './lib/supabase.js'

// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Supabase
async function syncWithServer() {
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const response = await fetch('/api/students', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(students)
        });
        
        const result = await response.json();
        if (result.success) {
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
            localStorage.setItem('students_backup', JSON.stringify(students));
            return true;
        } else {
            throw new Error(result.error);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
        localStorage.setItem('students_backup', JSON.stringify(students));
        return false;
    }
}

async function loadFromServer() {
    try {
        const response = await fetch('/api/students');
        if (!response.ok) throw new Error('Network error');
        
        const serverStudents = await response.json();
        if (serverStudents && serverStudents.length > 0) {
            students = serverStudents;
            saveToLocalStorage();
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
            return true;
        }
        return false;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:', error);
        return false;
    }
}

// Real-time —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
function setupRealtimeSync() {
    // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Supabase
    supabase
        .channel('students-changes')
        .on('postgres_changes', 
            { 
                event: '*', 
                schema: 'public', 
                table: 'students' 
            }, 
            (payload) => {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞');
                loadFromServer().then(success => {
                    if (success) {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                        if (window.updateStudentsTable) updateStudentsTable();
                        if (window.updateGroupsStats) updateGroupsStats();
                        if (window.updateReportFilters) updateReportFilters();
                    }
                });
            }
        )
        .subscribe();
}

// –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é saveToLocalStorage
function saveToLocalStorage() {
    localStorage.setItem('spt_students', JSON.stringify(students));
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    syncWithServer().then(success => {
        if (!success) {
            console.log('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ (—Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)');
        }
    });
}

// –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é loadFromLocalStorage
function loadFromLocalStorage() {
    const savedStudents = localStorage.getItem('spt_students');
    
    if (savedStudents) {
        students = JSON.parse(savedStudents);
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    loadFromServer().then(success => {
        if (success) {
            console.log('–î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
        }
    });
    
    // –í–∫–ª—é—á–∞–µ–º real-time —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    setupRealtimeSync();
}

// –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Å–∏—Ö–æ–ª–æ–≥–∞
function addSyncButton() {
    const controlsDiv = document.querySelector('.psychologist-dashboard .controls');
    if (controlsDiv && !document.getElementById('syncButton')) {
        const syncButton = document.createElement('button');
        syncButton.id = 'syncButton';
        syncButton.textContent = 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å';
        syncButton.addEventListener('click', () => {
            syncWithServer().then(success => {
                if (success) {
                    alert('–î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
                } else {
                    alert('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
                }
            });
        });
        controlsDiv.appendChild(syncButton);
    }
}

// –í—ã–∑–æ–≤–∏—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞
// –î–æ–±–∞–≤—å—Ç–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é loadPsychologistData():
function loadPsychologistData() {
    updateStudentsTable();
    updateGroupsStats();
    updateReportFilters();
    addSyncButton(); // ‚Üê –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£
}